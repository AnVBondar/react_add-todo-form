{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosId","lastCommentId","Math","max","App","useState","userDetails","setUserDetails","hasUserIdError","setHasUserIdError","setTitle","hasTitleError","setHasTitleError","newTodos","setNewTodos","addNewComment","newCommentId","comment","push","action","method","type","placeholder","value","onChange","event","target","onClick","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a566a40.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/UserInfo';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst todosId = todos.map(todo => todo.id);\nconst lastCommentId = Math.max(...todosId);\n\nexport const App = () => {\n  const [userDetails, setUserDetails] = useState<number>(0);\n  const [hasUserIdError, setHasUserIdError] = useState<boolean>(false);\n\n  const [title, setTitle] = useState<string>('');\n  const [hasTitleError, setHasTitleError] = useState<boolean>(false);\n\n  const [newTodos, setNewTodos] = useState<Todo[]>(todos);\n\n  const addNewComment = () => {\n    const newCommentId = lastCommentId + 1;\n    const comment = {\n      user: getUserById(userDetails),\n      userId: userDetails,\n      title,\n      completed: false,\n      id: newCommentId,\n    };\n\n    todosId.push(newCommentId);\n\n    return [...newTodos, comment];\n  };\n\n  const onAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasTitleError(!title);\n    setHasUserIdError(!userDetails);\n\n    if (!title || !userDetails) {\n      return;\n    }\n\n    setNewTodos(addNewComment);\n    setTitle('');\n    setUserDetails(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserDetails(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userDetails}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={onAdd}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}